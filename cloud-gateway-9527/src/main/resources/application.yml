server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名进行路由。
      routes:
        - id: payment_route_one # 路由的ID，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001 # 匹配后提供服务的路由地址（硬编码格式）
          uri: lb://CLOUD-PAYMENT-SERVICE # 断言匹配后提供服务的路由地址
          predicates:
            - Path=/payment/getPayment/** # 断言，路径相匹配的进行路由

        - id: payment_route_discovery # 路由id
          uri: lb://CLOUD-PAYMENT-SERVICE # 路由地址
          predicates:
            - Path=/payment/discovery/** # 断言匹配
            # - Header=X-Request-Id, \d+ # 表示请求头需要有X-Request-Id属性并且值为整数的正则表达式
            - Host=**.dj.top
            - Method=GET
            # - Query=username,\d+ # 要有参数名username并且值还要是整数才能路由
          filters:
            - AddRequestParameter=X-Request-Id,1024 # 过滤器会在匹配的请求头加上一对请求，名为X-Request-Id，值为1024

        - id: payment_route_lb # 路由ID
          # uri: http://localhost:8001 # 路由地址（硬编码格式）
          uri: lb://CLOUD-PAYMENT-SERVICE # 断言匹配后提供服务的路由地址
          predicates:
            - Path=/payment/payment/lb/** # 断言匹配
            - After=2021-05-26T16:57:46.224+08:00[GMT+08:00] # 表示在此时间之后的请求访问才会有效
            - Cookie=username,dj # 表示需要携带Cookie进行请求访问

        - id: payment_route_timeout
          uri: lb://CLOUD-PAYMENT-SERVICE
          predicates:
            - Path=/payment/feign/timeout/**
            - Query=username,\d+

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    # 表示是否将自己注册进 Eureka Server，默认为 true
    register-with-eureka: true
    # 是否从 Eureka Server 抓取已有的注册信息，默认为 true。单节点无所谓，集群必须设置为 true 才能配合 Ribbon 使用负载均衡。
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/ # 单机版
